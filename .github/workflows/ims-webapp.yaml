name: Inventory Management System

on:
  push:
    branches:
      - main
      - features/**
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: cs-ims-sea-dev-wa
  AZURE_WEBAPP_PACKAGE_PATH: "."
  DOTNET_VERSION: "9.x.x"

permissions:
  contents: read

jobs:
  test:
    name: Run unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          clean: true

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore project's dependencies
        run: dotnet restore ${{ github.workspace }}/CoffeeShopIMS.Test --no-cache

      - name: Run unit tests
        run: dotnet test ${{ github.workspace }}/CoffeeShopIMS.Test --no-restore --logger trx --results-directory ${{ github.workspace }}/CoffeeShopIMS.Test/TestResults

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/CoffeeShopIMS.Test/TestResults

  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          clean: true

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore project's dependencies
        run: dotnet restore ${{ github.workspace }}/CoffeeShopIMS --no-cache

      - name: Build project
        run: dotnet build ${{ github.workspace }}/CoffeeShopIMS --no-restore -c Release

      - name: Publish project
        run: dotnet publish ${{ github.workspace }}/CoffeeShopIMS --no-build --output ${{ github.workspace }}/CoffeeShopIMS/.out

      - name: Upload pipeline artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: ${{ github.workspace }}/CoffeeShopIMS/.out
          include-hidden-files: true

  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: none
    environment: DEV
    needs:
      - build
      - test
    steps:
      - name: Download pipeline artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app

      - name: Check if secret is environment secret
        run: |
          if [[ "$IS_ENV_SECRET" == "true" ]]; then
           echo "This is environment secret"
          else
           echo "This is repository secret"
          fi
        env:
          IS_ENV_SECRET: ${{ secrets.IS_ENV_SECRET }}

      - name: Login to Azure
        uses: azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
